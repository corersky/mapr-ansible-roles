---
# tasks file for mapr-aws-bootstrap

  - name: create nodes for edge/hivemeta/mysql roles
    local_action:
      module: ec2
      region: '{{ec2_region}}'
      zone: '{{ec2_zone}}'
      spot_price: 0.01
      key_name: '{{ec2_keypair}}'
      group: '{{ec2_security_group}}'
      image: '{{ec2_image}}' # This is a CentOS 6 image
      vpc_subnet_id: '{{vpc_subnet}}'
      assign_public_ip: true
      instance_type: m1.medium
      count: 3
      wait: yes
      wait_timeout: 500
      volumes:
      - device_name: /dev/sda
        volume_size: 16
        delete_on_termination: true
      monitoring: yes
      instance_tags:
        Name: '{{ec2_name_tag}}'
    register: external

  - name: create some cluster nodes
    local_action:
      module: ec2
      region: '{{ec2_region}}'
      zone: '{{ec2_zone}}'
      spot_price: 0.0179
      key_name: '{{ec2_keypair}}'
      group: '{{ec2_security_group}}'
      image: '{{ec2_image}}' # This is a CentOS 6 image
      vpc_subnet_id: '{{vpc_subnet}}'
      assign_public_ip: true
      instance_type: m1.large
      count: "{{cluster_node_count}}"
      wait: yes
      wait_timeout: 500
      volumes:
      - device_name: /dev/sda
        volume_size: 16
        delete_on_termination: true
      - device_name: /dev/sdb
        volume_size: 64
        delete_on_termination: true
      - device_name: /dev/sdc
        volume_size: 64
        delete_on_termination: true
      - device_name: /dev/sdd
        volume_size: 64
        delete_on_termination: true
      - device_name: /dev/sde
        volume_size: 64
        delete_on_termination: true
      monitoring: yes
      instance_tags:
        Name: '{{ec2_name_tag}}'
    register: ec2_cluster

  - name: tag an edge node
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: external.instances[0:1]
    args:
      tags:
        edge: true
    register: edge

  - name: tag a mysql node
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: external.instances[1:2]
    args:
      tags:
        mysql: true
    register: mysql

  - name: tag a hivemeta node
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: external.instances[2:3]
    args:
      tags:
        hiveserver: true
    register: hiveservers

  - name: tag three instances as zookeepers
    local_action: ec2_tag resource={{ item.id }} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[0:3]
    args:
      tags:
        zookeeper: true
    register: zookeepers

  - name: tag two instances as CLDBs
    local_action: ec2_tag resource={{ item.id }} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[0:2]
    args:
      tags:
        cldb: true
    register: cldbs

  - name: tag all instances as NFS servers
    local_action: ec2_tag resource={{ item.id }} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances
    args:
      tags:
        nfs: true
    register: nfs

  - name: tag two instances as webservers
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[1:3]
    args:
      tags:
        webserver: true
    register: webservers

  - name: tag four instances with metrics
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[1:5]
    args:
      tags:
        metrics: true
    register: metrics

  - name: tag all cluster nodes as fileservers
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances
    args:
      tags:
        fileserver: true
    register: fileservers

  - name: tag jobtrackers
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[3:5]
    args:
      tags:
        jobtracker: true
    register: jobtrackers

  - name: tag tasktrackers
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances
    args:
      tags:
        tasktracker: true
    register: tasktrackers

  - name: tag hbase-masters
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[3:5]
    args:
      tags:
        hbasemaster: true
    register: hbasemasters

  - name: tag hbase-regionservers
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances
    args:
      tags:
        hbaseregionserver: true
    register: hbaseregionservers

  - name: tag spark master
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[0:1]
    args:
      tags:
        spark_master: true
    register: sparkmaster

  - name: tag spark slaves
    local_action: ec2_tag resource={{item.id}} region='{{ec2_region}}' state=present
    with_items: ec2_cluster.instances[1:5]
    args:
      tags:
        spark_slave: true
    register: sparkslaves

  - name: write an inventory file containing the just-created cluster
    template: src=cluster.hosts.j2 dest='./{{ec2_name_tag}}.hosts' mode=0644 backup=yes

  # - name: debug result
  #   debug: msg="cluster nodes; {{ec2_cluster.instance_ids}}, edge node; {{edge.instance_ids}}, mysql node; {{mysql.instance_ids}}"

  # - name: remove instances 
  #   local_action:
  #     module: ec2
  #     region: '{{ec2_region}}'
  #     state: absent
  #     instance_ids: '{{ec2_cluster.instance_ids}}'
