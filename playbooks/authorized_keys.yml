---
- hosts: cluster
  sudo: yes
  tasks:
    - name: ensure root user has ssh keys
      user: name=root generate_ssh_key=yes ssh_key_type=dsa ssh_key_bits=1024

    - name: set a password for the mapr user and ensure ssh keys exist
      user: name=mapr password="{{mapr_user_pw}}" generate_ssh_key=yes

    # - name: create .ssh for mapr user
    #   file: path=/home/mapr/.ssh mode=0700 state=directory owner=mapr group=mapr

    # - name: create ssh keys for mapr user 
    #   command: creates=/home/mapr/.ssh/id_dsa ssh-keygen -t dsa -P "" -f /home/mapr/.ssh/id_dsa

    - name: make mapr user owner
      file: path=/home/mapr/.ssh/id_dsa mode=0600 owner=mapr group=mapr 

    - name: fetch mapr's ssh key from each node
      fetch: src=/home/mapr/.ssh/id_dsa.pub dest="/tmp/mapr-{{ansible_hostname}}-id_dsa.pub" flat=yes

    - name: fetch root's ssh key from each node
      fetch: src=/root/.ssh/id_dsa.pub dest="/tmp/root-{{ansible_hostname}}-id_dsa.pub" flat=yes

    - name: add all hosts public keys to authorized_keys on all nodes
      authorized_key: key="{{ lookup('file', item) }}" user=mapr 
      with_fileglob:
        - "/tmp/mapr*id_dsa.pub"

    - name: add all hosts public keys to authorized_keys on all nodes
      authorized_key: key="{{ lookup('file', item) }}" user=root 
      with_fileglob:
        - "/tmp/root*id_dsa.pub"

- hosts: localhost
  tasks:
    - name: clean up the public keys we copied to the local machine in the last play
      file: state=absent path={{item}}
      with_fileglob:
          - "/tmp/*id_dsa.pub"